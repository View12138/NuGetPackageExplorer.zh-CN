<Window x:Class="PackageExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:self="clr-namespace:PackageExplorer"
        xmlns:viewmodel="clr-namespace:PackageExplorerViewModel;assembly=PackageViewModel"
        xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        Title="{Binding WindowTitle, FallbackValue={x:Static self:Resources.Dialog_Title}, Mode=OneWay, Converter={StaticResource StringShortenerConverter}, ConverterParameter=100}"
        Height="650" Width="750" MinWidth="600" MinHeight="300"
        Icon="Images/packageicon.png"
        FontSize="{Binding FontSize, Source={StaticResource Settings}}"
        AllowDrop="True" DragOver="Window_DragOver"
        Drop="Window_Drop"
        PreviewMouseWheel="Window_PreviewMouseWheel"
        Closing="Window_Closing"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display">
    <Window.Background>
        <ImageBrush PresentationOptions:Freeze="true" ImageSource="Images/background.png" Stretch="None" TileMode="Tile" Viewport="0,0,24,24" ViewportUnits="Absolute" />
    </Window.Background>

    <Window.Resources>
        <viewmodel:DisabledCommand x:Key="DisabledCommand" />
        <self:PackagePartToVisibilityConverter x:Key="PackagePartConverter" />
        <self:TruncateFilePathConverter x:Key="TruncatePathConverter" />
        <self:TaskShortcutVisibilityConverter x:Key="TaskShortcutConverter" />

        <Style x:Key="PackageCommandItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Command" Value="{Binding DataContext.ExecutePackageCommand, ElementName=RootLayout, Mode=OneWay}" />
            <Setter Property="CommandParameter" Value="{Binding Mode=OneWay}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Metadata.Text, Mode=OneWay, TargetNullValue=''}" Value="">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext, ElementName=RootLayout, Mode=OneWay}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <self:PackageCommandItemContainerSelector x:Key="PackageCommandItemStyleSelector" PackageCommandStyle="{StaticResource PackageCommandItemStyle}" />
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="NewMenuItem_Click" CanExecute="CanExecuteNewCommand" />
        <CommandBinding Command="Open" Executed="OpenMenuItem_Click" CanExecute="CanExecuteNewCommand" />
        <CommandBinding Command="Print" Executed="OpenFeedItem_Click" CanExecute="CanExecuteNewCommand" />
        <CommandBinding Command="Close" Executed="CloseMenuItem_Click" CanExecute="CanExecuteCloseCommand" />
        <CommandBinding Command="GoToPage" Executed="OpenExternalLink" />
        <CommandBinding Command="Help" Executed="HelpCommandExecuted" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="K" Command="{Binding EditCommand, FallbackValue={StaticResource DisabledCommand}}" />
        <KeyBinding Modifiers="Control" Key="G" Command="Print" />
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveCommand, FallbackValue={StaticResource DisabledCommand}}" CommandParameter="Save" />
        <KeyBinding Modifiers="Control+Shift" Key="S" Command="{Binding SaveCommand, FallbackValue={StaticResource DisabledCommand}}" CommandParameter="SaveAs"/>
        <KeyBinding Modifiers="Control" Key="P" Command="{Binding PublishCommand, FallbackValue={StaticResource DisabledCommand}}" />
        <KeyBinding Modifiers="Control" Key="Q" Command="{Binding ViewPackageAnalysisCommand, FallbackValue={StaticResource DisabledCommand}}" />
        <KeyBinding Key="Escape" Command="{Binding CancelEditCommand}" />
        <KeyBinding Key="F2" Command="{Binding RenameContentCommand}" />
        <KeyBinding Key="Delete" Command="{Binding DeleteContentCommand}" />
        <KeyBinding Key="Enter" Command="{Binding ViewContentCommand}" />
        <KeyBinding Modifiers="Shift" Key="Enter" Command="{Binding OpenContentFileCommand}" />
    </Window.InputBindings>

    <DockPanel x:Name="RootLayout" LastChildFill="True" Visibility="{Binding IsInEditFileMode, Mode=OneWay, FallbackValue=Visible, Converter={StaticResource invertedBoolToVis}}">
        <!-- Menu bar -->
        <Menu DockPanel.Dock="Top" Background="{StaticResource MenuBackgroundBrush}">
            <self:GrayscaleMenuItem Header="文件(_F)" Margin="3,0">
                <MenuItem Command="New" Header="新建(_N)" Icon="{StaticResource NewItemIcon}" />
                <self:GrayscaleMenuItem Command="Open" Header="打开(_O)..." Icon="{StaticResource OpenFolderIcon}" />
                <MenuItem Header="从源打开(_E)..." Command="Print" InputGestureText="Ctrl+G" />
                <Separator />
                <MenuItem Command="Close" Header="关闭(_C)" />
                <Separator />
                <self:GrayscaleMenuItem x:Name="SaveMenuItem" Header="保存(_S)" Command="{Binding SaveCommand, FallbackValue={StaticResource DisabledCommand}}" CommandParameter="Save" InputGestureText="Ctrl+S">
                    <self:GrayscaleMenuItem.Icon>                        
                        <self:GrayscaleContentPresenter Content="{StaticResource SaveIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Header="另存为(_A)..." Command="{Binding SaveCommand, FallbackValue={StaticResource DisabledCommand}}" CommandParameter="SaveAs" InputGestureText="Ctrl+Shift+S">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource SaveAsIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <MenuItem Header="_Metadata 另存为..." Command="{Binding SaveCommand, FallbackValue={StaticResource DisabledCommand}}" CommandParameter="SaveMetadataAs" />
                <MenuItem Header="签名并另存为..." Command="{Binding SaveCommand, FallbackValue={StaticResource DisabledCommand}}" CommandParameter="SignAndSaveAs" />
                <Separator />
                <MenuItem Header="导出(_T)..." Command="{Binding ExportCommand, FallbackValue={StaticResource DisabledCommand}}" />
                <self:GrayscaleMenuItem Command="{Binding PublishCommand, FallbackValue={StaticResource DisabledCommand}}" Header="发布(_P)..." InputGestureText="Ctrl+P">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource ReleaseIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <Separator />
                <MenuItem Header="近期文件(_R)" x:Name="RecentFilesMenuItem" Visibility="{Binding Files.Count, Converter={StaticResource countConverter}}">
                    <MenuItem.ItemsSource>
                        <CompositeCollection>
                            <CollectionContainer x:Name="RecentFilesContainer" />
                            <MenuItem Header="清除近期文件列表(_T)">
                                <MenuItem.Icon>
                                    <ContentPresenter Content="{StaticResource CloseIcon}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </CompositeCollection>
                    </MenuItem.ItemsSource>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <EventSetter Event="Click" Handler="RecentFileMenuItem_Click" />
                            <Setter Property="Header" Value="{Binding ., Converter={StaticResource TruncatePathConverter}}" />
                            <Setter Property="ToolTip" Value="{Binding Path}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator Visibility="{Binding Visibility, ElementName=RecentFilesMenuItem, Mode=OneWay}" />
                <MenuItem Header="退出(_X)" Click="ExitMenuItem_Click" />
            </self:GrayscaleMenuItem>

            <self:GrayscaleMenuItem Header="编辑(_E)" Margin="3,0" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                <self:GrayscaleMenuItem Header="编辑 _Metadata" InputGestureText="Ctrl+K" Command="{Binding EditCommand, FallbackValue={StaticResource DisabledCommand}}">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource EditManifestIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>

                <self:GrayscaleMenuItem Header="编辑 Metadata 源(_S)" Command="{Binding EditMetadataSourceCommand, FallbackValue={StaticResource DisabledCommand}}">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource MarkupTagIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>

                <Separator />

                <self:GrayscaleMenuItem Header="移除包签名" Command="{Binding RemoveSignaturesCommand, FallbackValue={StaticResource DisabledCommand}}">
  
                </self:GrayscaleMenuItem>

                <MenuItem Visibility="{Binding SelectedItem, Converter={StaticResource PackagePartConverter}, ConverterParameter=file, FallbackValue=Collapsed}" Command="{Binding EditFileCommand}" CommandParameter="{Binding SelectedItem, FallbackValue={x:Null}}">
                    <MenuItem.Header>
                        <TextBlock Text="{Binding SelectedItem.Name, Mode=OneWay, FallbackValue='', StringFormat='编辑 ‘{0}’', Converter={StaticResource StringShortenerConverter}, ConverterParameter=35}" />
                    </MenuItem.Header>
                </MenuItem>

                <Separator />
                <self:GrayscaleMenuItem Command="Cut">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource CutIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Copy">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource CopyIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Paste">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource PasteIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
            </self:GrayscaleMenuItem>

            <MenuItem Header="视图(_V)" Margin="3,0">
                <MenuItem Header="字体大小(_S)" x:Name="FontSizeMenuItem" Icon="{StaticResource FontSizeIcon}">

                    <self:GrayscaleMenuItem Header="正常(_N)" Tag="12" Click="OnFontSizeItem_Click" IsChecked="{Binding FontSize, Source={StaticResource Settings}, Converter={StaticResource FontSizeToBoolConverter}, ConverterParameter=12, Mode=OneWay}" />
                    <self:GrayscaleMenuItem Header="中等(_M)" Tag="14" Click="OnFontSizeItem_Click" IsChecked="{Binding FontSize, Source={StaticResource Settings}, Converter={StaticResource FontSizeToBoolConverter}, ConverterParameter=14, Mode=OneWay}" />
                    <self:GrayscaleMenuItem Header="大(_L)" Tag="16" Click="OnFontSizeItem_Click" IsChecked="{Binding FontSize, Source={StaticResource Settings}, Converter={StaticResource FontSizeToBoolConverter}, ConverterParameter=16, Mode=OneWay}" />
                    <self:GrayscaleMenuItem Header="特大(_X)" Tag="18" Click="OnFontSizeItem_Click" IsChecked="{Binding FontSize, Source={StaticResource Settings}, Converter={StaticResource FontSizeToBoolConverter}, ConverterParameter=18, Mode=OneWay}" />
                </MenuItem>
                <MenuItem Header="显示公共任务(_K)" IsChecked="{Binding ShowTaskShortcuts, Source={StaticResource Settings}}" IsCheckable="true" />
                <MenuItem Header="显示状态栏(_B)" x:Name="ShowStatusBarMenuItem" IsCheckable="True" IsChecked="True" />
            </MenuItem>

            <MenuItem Header="内容(_C)" Margin="3,0" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                <MenuItem Header="查看文件内容(_C)" Command="{Binding ViewContentCommand}" InputGestureText="Enter" />
                <MenuItem Header="在 Windows shell 中打开文件(_S)..." Command="{Binding OpenContentFileCommand}" InputGestureText="Shift+Enter" />
                <Separator />
                <MenuItem Header="添加(_A)">
                    <MenuItem.Icon>
                        <ContentPresenter Content="{StaticResource AddIcon}" />
                    </MenuItem.Icon>
                    <MenuItem Header="新建文件(_I)..." Command="{Binding AddNewFileCommand}" Icon="{StaticResource NewItemIcon}"/>
                    <MenuItem Header="现有文件(_E)..." Command="{Binding AddContentFileCommand}" Icon="{StaticResource AddItemIcon}" />
                    <self:GrayscaleMenuItem Header="新建文件夹(_N)" Command="{Binding AddNewFolderCommand}">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleContentPresenter Content="{StaticResource AddFolderIcon}" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <Separator />
                    <self:GrayscaleMenuItem Header="Content 文件夹(_C)" Command="{Binding AddContentFolderCommand}" CommandParameter="content">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleContentPresenter Content="{StaticResource ContentFolderIcon}" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <self:GrayscaleMenuItem Header="Lib 文件夹(_L)" Command="{Binding AddContentFolderCommand}" CommandParameter="lib">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleContentPresenter Content="{StaticResource LibFolderIcon}" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <self:GrayscaleMenuItem Header="Tools 文件夹(_T)" Command="{Binding AddContentFolderCommand}" CommandParameter="tools">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleContentPresenter Content="{StaticResource ToolsFolderIcon}" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <self:GrayscaleMenuItem Header="Build 文件夹(_B)" Command="{Binding AddContentFolderCommand}" CommandParameter="build">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleContentPresenter Content="{StaticResource BuildFolderIcon}" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <self:GrayscaleMenuItem Header="添加 BuildMultiTargeting 文件夹(_M)" Command="{Binding AddContentFolderCommand}" CommandParameter="buildMultiTargeting">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleContentPresenter Content="{StaticResource BuildFolderIcon}" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <self:GrayscaleMenuItem Header="添加 BuildTransitive 文件夹(_R)" Command="{Binding AddContentFolderCommand}" CommandParameter="buildTransitive">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleContentPresenter Content="{StaticResource BuildFolderIcon}" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <self:GrayscaleMenuItem Header="Src 文件夹(_S)" Command="{Binding AddContentFolderCommand}" CommandParameter="src">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleContentPresenter Content="{StaticResource SourceFolderIcon}" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                </MenuItem>
                <MenuItem Header="重命名(_R)..." Command="{Binding RenameContentCommand}" InputGestureText="F2" Icon="{StaticResource RenameIcon}" />
                <self:GrayscaleMenuItem Header="删除(_D)..." Command="{Binding DeleteContentCommand}" InputGestureText="Delete">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource RemoveIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
            </MenuItem>

            <MenuItem Header="工具(_T)" Margin="3,0" DisplayMemberPath="Metadata.Text" ItemContainerStyleSelector="{StaticResource PackageCommandItemStyleSelector}">
                <MenuItem.ItemsSource>
                    <CompositeCollection>
                        <CollectionContainer x:Name="PackageCommandsContainer"></CollectionContainer>

                        <MenuItem Header="分析包(_A)" InputGestureText="Ctrl+Q" Command="{Binding ViewPackageAnalysisCommand}" Visibility="{Binding Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />
                        <Separator Visibility="{Binding Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />
                        <MenuItem Header="扩展管理器(_P)..." Click="AddPluginFromAssembly_Click" x:Name="pluginMenuItem">
                            <MenuItem.Icon>
                                <ContentPresenter Content="{StaticResource ExtensionIcon}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator x:Name="mnuPluginSep" />
                        <MenuItem Header="查看 NuGet 下载缓存(_E)" Click="ViewDownloadCache_Click" />
                        <MenuItem Header="清除 NuGet 下载缓存(_R)" Click="ClearDownloadCache_Click" />
                    </CompositeCollection>
                </MenuItem.ItemsSource>

            </MenuItem>

            <MenuItem Header="帮助(_H)" Margin="3,0">
                <MenuItem Header="NuGet 文档(_N)" Command="GoToPage" CommandParameter="https://docs.nuget.org/">
                    <MenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource F1HelpIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="怎样创建包(_C)" Command="GoToPage" CommandParameter="https://docs.nuget.org/docs/creating-packages/creating-and-publishing-a-package" />
                <MenuItem Header="Nuspec 引用(_N)" Command="GoToPage" CommandParameter="https://docs.nuget.org/docs/reference/nuspec-reference" />
                <MenuItem Header="版本范围规范(_V)" Command="GoToPage" CommandParameter="https://docs.nuget.org/docs/reference/version-range-specification" />
                <Separator />
                <MenuItem Header="报告 Bug(_O)..." Command="GoToPage" CommandParameter="https://github.com/NuGetPackageExplorer/NuGetPackageExplorer/issues/new" />
                <MenuItem Header="关于(_A)..." Command="Help" />
            </MenuItem>
        </Menu>

        <!-- Status bar -->
        <StatusBar Padding="0,2,0,2" DockPanel.Dock="Bottom" Background="#293955" Foreground="#CCFFFFFF" Visibility="{Binding IsChecked, ElementName=ShowStatusBarMenuItem, Converter={StaticResource boolToVis}}">
            <StatusBarItem x:Name="PackageSourceItem" Content="{Binding PackageSource, FallbackValue=Ready}" />
            <StatusBarItem HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,4,0" Visibility="{Binding HasEdit, Converter={StaticResource boolToVis}, FallbackValue=Collapsed}">
                <StatusBarItem.Content>
                    <Ellipse Width="8" Height="8" Fill="White" />
                </StatusBarItem.Content>
            </StatusBarItem>
        </StatusBar>

        <Grid x:Name="MainContentContainer">
            <self:TaskShortcut HorizontalAlignment="Center" VerticalAlignment="Center">
                <self:TaskShortcut.Visibility>
                    <MultiBinding Converter="{StaticResource TaskShortcutConverter}">
                        <Binding Mode="OneWay" FallbackValue="{x:Null}" />
                        <Binding Path="ShowTaskShortcuts" Source="{StaticResource Settings}" Mode="OneWay" />
                    </MultiBinding>
                </self:TaskShortcut.Visibility>
            </self:TaskShortcut>
        </Grid>
    </DockPanel>
</Window>
