<UserControl x:Class="PackageExplorer.FileEditor" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit" xmlns:self="clr-namespace:PackageExplorer" mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300" DataContextChanged="UserControl_DataContextChanged" Loaded="UserControl_Loaded">

    <UserControl.InputBindings>
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveCommand, Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type self:FileEditor}}}" />
        <KeyBinding Modifiers="Control" Key="F4" Command="{Binding CloseCommand, Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type self:FileEditor}}}" />
    </UserControl.InputBindings>

    <DockPanel>
        <Menu DockPanel.Dock="Top" Background="{StaticResource MenuBackgroundBrush}">
            <MenuItem Header="文件(_F)" Margin="3,0">
                <self:GrayscaleMenuItem Header="保存(_S)" Command="{Binding SaveCommand, Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type self:FileEditor}}}">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource SaveIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <Separator />
                <MenuItem Header="返回包(_R)" Command="{Binding CloseCommand, Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type self:FileEditor}}}" />
            </MenuItem>

            <self:GrayscaleMenuItem Margin="3,0" Header="编辑(_E)" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                <self:GrayscaleMenuItem Command="Undo">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource UndoIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Redo">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource RedoIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <Separator />
                <self:GrayscaleMenuItem Command="Cut">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource CutIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Copy">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource CopyIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Paste">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource PasteIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <Separator/>
                <self:GrayscaleMenuItem Command="Find">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleContentPresenter Content="{StaticResource QuickFindIcon}" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
            </self:GrayscaleMenuItem>

            <MenuItem Header="视图(_V)" Margin="3,0">
                <MenuItem Header="字体大小(_S)" x:Name="FontSizeMenuItem">
                    <MenuItem.Icon>
                        <ContentPresenter Content="{StaticResource FontSizeIcon}" />
                    </MenuItem.Icon>
                    <self:GrayscaleMenuItem Header="正常(_N)" Tag="12" Click="OnFontSizeItem_Click" IsChecked="{Binding FontSize, Source={StaticResource Settings}, Converter={StaticResource FontSizeToBoolConverter}, ConverterParameter=12, Mode=OneWay}" />
                    <self:GrayscaleMenuItem Header="中等(_M)" Tag="14" Click="OnFontSizeItem_Click" IsChecked="{Binding FontSize, Source={StaticResource Settings}, Converter={StaticResource FontSizeToBoolConverter}, ConverterParameter=14, Mode=OneWay}" />
                    <self:GrayscaleMenuItem Header="大(_A)" Tag="16" Click="OnFontSizeItem_Click" IsChecked="{Binding FontSize, Source={StaticResource Settings}, Converter={StaticResource FontSizeToBoolConverter}, ConverterParameter=16, Mode=OneWay}" />
                    <self:GrayscaleMenuItem Header="特大(_X)" Tag="18" Click="OnFontSizeItem_Click" IsChecked="{Binding FontSize, Source={StaticResource Settings}, Converter={StaticResource FontSizeToBoolConverter}, ConverterParameter=18, Mode=OneWay}" />
                </MenuItem>

                <MenuItem Header="文本换行(_W)" IsCheckable="True" IsChecked="{Binding WordWrap, Source={StaticResource Settings}, Mode=TwoWay}" />
                <MenuItem Header="显示行号(_L)" IsCheckable="True" IsChecked="{Binding ShowLineNumbers, Source={StaticResource Settings}, Mode=TwoWay}" />
            </MenuItem>

            <MenuItem Header="帮助(_H)" Margin="3,0">
                <MenuItem Header="报告 B_ug..." Command="GoToPage" CommandParameter="https://github.com/NuGetPackageExplorer/NuGetPackageExplorer/issues/new" />
                <MenuItem Header="关于(_B)..." Command="Help" />
            </MenuItem>
        </Menu>
        
        <!-- This border simulates ToolbarTray -->
        <Border Background="{StaticResource ToolBarTrayBackground}" DockPanel.Dock="Top">
            <ToolBar ToolBarTray.IsLocked="True" Margin="1">            
                <!-- Return to Package -->
                <Button ToolTip="返回包 (Ctrl+F4)"
                        Command="{Binding CloseCommand, Mode=OneWay}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type self:FileEditor}}}"
                        Content="{StaticResource BackwardIcon}"
                        />

                <!-- Save -->
                <self:GrayscaleButton ToolTip="保存 (Ctrl+S)" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Command="{Binding SaveCommand, Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type self:FileEditor}}}">
                    <self:GrayscaleContentPresenter Content="{StaticResource SaveIcon}" />
                </self:GrayscaleButton>

                <Separator />

                <!-- Cut -->
                <self:GrayscaleButton ToolTip="剪切 (Ctrl+X)" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Command="Cut">
                    <self:GrayscaleContentPresenter Content="{StaticResource CutIcon}" />
                </self:GrayscaleButton>

                <!-- Copy -->
                <self:GrayscaleButton ToolTip="复制 (Ctrl+C)" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Command="Copy">
                    <self:GrayscaleContentPresenter Content="{StaticResource CopyIcon}" />
                </self:GrayscaleButton>

                <!-- Paste -->
                <self:GrayscaleButton ToolTip="粘贴 (Ctrl+V)" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Command="Paste">
                    <self:GrayscaleContentPresenter Content="{StaticResource PasteIcon}" />
                </self:GrayscaleButton>

                <Separator />

                <!-- Undo -->
                <self:GrayscaleButton ToolTip="撤销 (Ctrl+Z)" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Command="Undo">
                    <self:GrayscaleContentPresenter Content="{StaticResource UndoIcon}" />
                </self:GrayscaleButton>

                <!-- Redo -->
                <self:GrayscaleButton ToolTip="重做 (Ctrl+Y)" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Command="Redo">
                    <self:GrayscaleContentPresenter Content="{StaticResource RedoIcon}" />
                </self:GrayscaleButton>

                <Separator />

                <Label Content="语法方案(_A)：" Target="SyntaxDefinitions" />

                <ComboBox x:Name="SyntaxDefinitions" IsEditable="false" IsReadOnly="true" Width="110" DisplayMemberPath="Name"></ComboBox>

                <Separator />

                <Label Content="字体(_O)： " Target="FontChoice" />

                <ComboBox x:Name="FontChoice" IsEditable="false" IsReadOnly="True" Height="{Binding ActualHeight, ElementName=SyntaxDefinitions}" Width="150">
                    <ComboBox.Resources>
                        <Style TargetType="{x:Type Popup}">
                            <Setter Property="Width" Value="250" />
                            <Setter Property="TextElement.FontSize" Value="15" />
                        </Style>
                    </ComboBox.Resources>

                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontFamily="{Binding}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>
            </ToolBar>
        </Border>
        
        <StatusBar Padding="0,2,0,2" DockPanel.Dock="Bottom" Background="#293955" Foreground="#CCFFFFFF">
            <StatusBarItem Content="{Binding FileInEdit.Path, FallbackValue=Ready, Mode=OneWay}" />
            <StatusBarItem HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,3,0" Visibility="{Binding HasEdit, Converter={StaticResource boolToVis}, FallbackValue=Collapsed}">
                <StatusBarItem.Content>
                    <Ellipse Width="7" Height="7" Fill="White" />
                </StatusBarItem.Content>
            </StatusBarItem>
        </StatusBar>

        <ae:TextEditor 
            x:Name="Editor" 
            Margin="5" 
            Padding="5,2,5,5" 
            HorizontalScrollBarVisibility="Auto" 
            IsModified="{Binding HasEdit, Mode=TwoWay}" 
            WordWrap="{Binding WordWrap, Source={StaticResource Settings}, Mode=OneWay}" 
            ShowLineNumbers="{Binding ShowLineNumbers, Source={StaticResource Settings}, Mode=OneWay}" 
            SyntaxHighlighting="{Binding SelectedItem, ElementName=SyntaxDefinitions, Mode=OneWay}" 
            FontFamily="{Binding SelectedItem, ElementName=FontChoice}"
            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
            />
    </DockPanel>
</UserControl>